{"version":3,"sources":["api/normalizeComics.js","api/normalizeCreators.js","api/normalizeCharacters.js","api/api.js","features/comics/comicsSlice.js","features/comics/comicCharactersSlice.js","features/comics/ComicCharacters.js","features/comics/comicCreatorsSlice.js","features/comics/ComicCreators.js","features/comics/Comic.js","components/Spinner.js","features/comics/ComicsList.js","app/Navbar.js","app/AppRouter.js","app/store.js","App.js","index.js"],"names":["normalizeComics","data","total","limit","offset","results","map","normalizeComic","comic","characters","creators","dates","events","description","format","id","images","pageCount","prices","stories","thumbnail","title","getThumbnailUrl","extension","path","normalizeCreators","normalizeCreator","comics","firstName","fullName","lastName","middleName","series","available","normalizeCharacters","normalizeCharacter","modified","name","BASE_URL","API_CREDENTIALS","apikey","hash","ts","getAllComics","a","params","url","URL","customParams","checkParams","search","URLSearchParams","toString","fetch","response","json","getComicById","comicId","getCreatorsByComic","getCharactersByComic","queryParams","key","undefined","comicsAdapter","createEntityAdapter","initialState","getInitialState","status","error","activeComic","creatorsByComic","filters","currentPage","titleStartsWith","fetchComics","createAsyncThunk","dispatch","filtersUpdated","fetchComicById","comicsSlice","createSlice","reducers","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","removeAll","upsertMany","rejected","Error","actions","getSelectors","selectComicById","selectAll","selectById","selectComicIds","selectIds","comicCharactersAdapter","fetchCharactersByComic","comicCharactersSlice","comicCharacters","selectComicCharacterById","ComicCharacterItem","character","useState","show","setShow","resourceURI","split","reverse","characterId","characterDetails","useSelector","ListGroup","Item","className","Button","variant","size","onClick","Modal","onHide","Header","closeButton","Title","Body","Row","Col","md","Image","src","rounded","ComicCharacters","itemsComicCharacters","useDispatch","useParams","useEffect","items","comicCreatorsAdapter","fetchCreatorsByComic","comicCreatorsSlice","comicCreators","selectComicCreatorById","ComicCreatorItem","creator","creatorId","creatorDetails","role","ComicCreators","itemsComicCreators","Comic","comicInfo","history","useHistory","useRouteMatch","Card","Img","Text","Container","fluid","push","Nav","Link","as","NavLink","to","Badge","pill","bg","exact","component","Spinner","animation","ComicItem","ComicsSearchBar","value","setValue","onSubmit","e","preventDefault","length","Form","Group","Control","type","placeholder","onChange","target","autoComplete","autoFocus","ComicsControls","comicStatus","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","activeClassName","onPageChange","selected","forcePage","ComicsList","content","comicIds","xs","lg","Navbar","Brand","AppRouter","exac","store","configureStore","reducer","comicsReducer","comicCharactersReducer","comicCreatorsReducer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.231a0216.chunk.js","sourcesContent":["export function normalizeComics(data = {}) {\r\n  const { total, limit, offset, results } = data;\r\n\r\n  return {\r\n    total,\r\n    limit,\r\n    offset,\r\n    results: results.map(normalizeComic)\r\n  };\r\n}\r\n\r\nexport function normalizeComic(comic) {\r\n  const {\r\n    characters,\r\n    creators,\r\n    dates,\r\n    events,\r\n    description,\r\n    format,\r\n    id,\r\n    images,\r\n    pageCount,\r\n    prices,\r\n    stories,\r\n    thumbnail, \r\n    title\r\n  } = comic;\r\n\r\n  return {\r\n    characters: characters,\r\n    creators: creators,\r\n    events: events,\r\n    dates, \r\n    description,\r\n    format, \r\n    id, \r\n    images,\r\n    pageCount,\r\n    prices,\r\n    stories: stories,\r\n    thumbnail: getThumbnailUrl(thumbnail),\r\n    title\r\n  };\r\n}\r\n\r\nfunction getThumbnailUrl({ extension, path }) {\r\n  return `${path}.${extension}`;\r\n}","export function normalizeCreators(data = {}) {\r\n  const { total, limit, offset, results } = data;\r\n\r\n  return {\r\n    total,\r\n    limit,\r\n    offset,\r\n    results: results.map(normalizeCreator)\r\n  };\r\n}\r\n\r\nexport function normalizeCreator(comic) {\r\n  const {\r\n    comics,\r\n    events,\r\n    firstName,\r\n    fullName,\r\n    id,\r\n    lastName,\r\n    middleName,\r\n    series,\r\n    stories,\r\n    thumbnail\r\n  } = comic;\r\n\r\n  return {\r\n    comics: comics.available,\r\n    events: events.available,\r\n    firstName,\r\n    fullName,\r\n    id,\r\n    lastName,\r\n    middleName,\r\n    series: series.available,\r\n    stories: stories.available,\r\n    thumbnail: getThumbnailUrl(thumbnail)\r\n  };\r\n}\r\n\r\nfunction getThumbnailUrl({ extension, path }) {\r\n  return `${path}.${extension}`;\r\n}\r\n","export function normalizeCharacters(data = {}) {\r\n  const { total, limit, offset, results } = data;\r\n\r\n  return {\r\n    total,\r\n    limit,\r\n    offset,\r\n    results: results.map(normalizeCharacter)\r\n  };\r\n}\r\n\r\nexport function normalizeCharacter(comic) {\r\n  const {\r\n    comics,\r\n    description,\r\n    events,\r\n    id,\r\n    modified,\r\n    name,\r\n    series,\r\n    stories,\r\n    thumbnail\r\n  } = comic;\r\n\r\n  return {\r\n    comics: comics.available,\r\n    description,\r\n    events: events.available,\r\n    id,\r\n    modified,\r\n    name,\r\n    series: series.available,\r\n    stories: stories.available,\r\n    thumbnail: getThumbnailUrl(thumbnail)\r\n  };\r\n}\r\n\r\nfunction getThumbnailUrl({ extension, path }) {\r\n  return `${path}.${extension}`;\r\n}\r\n","import { normalizeComic, normalizeComics } from './normalizeComics';\r\nimport { normalizeCreators } from './normalizeCreators';\r\nimport { normalizeCharacters } from './normalizeCharacters';\r\n\r\nconst BASE_URL = 'https://gateway.marvel.com:443/v1/public';\r\n\r\nconst API_CREDENTIALS = {\r\n  apikey: 'b2fe4031b105b678f7c22d8fa85386cf',\r\n  hash: 'e278b988a47a269ac9612d85dda78246',\r\n  ts: '1'\r\n};\r\n\r\nexport const getAllComics = async (params = {}) => {\r\n  const url = new URL(`${BASE_URL}/comics`);\r\n  const customParams = {\r\n    ...API_CREDENTIALS,\r\n    ...checkParams(params)\r\n  };\r\n  url.search = new URLSearchParams(customParams).toString();\r\n\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  return normalizeComics(data);\r\n};\r\n\r\nexport const getComicById = async (comicId) => {\r\n  const url = new URL(`${BASE_URL}/comics/${comicId}`);\r\n  const customParams = {\r\n    ...API_CREDENTIALS\r\n  };\r\n  url.search = new URLSearchParams(customParams).toString();\r\n\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  \r\n  return normalizeComic(data.results[0]);\r\n}\r\n\r\nexport const getCreatorsByComic = async (comicId) => {\r\n  const url = new URL(`${BASE_URL}/comics/${comicId}/creators`);\r\n  const customParams = {\r\n    ...API_CREDENTIALS\r\n  };\r\n  url.search = new URLSearchParams(customParams).toString();\r\n\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  return normalizeCreators(data);\r\n};\r\n\r\nexport const getCharactersByComic = async (comicId) => {\r\n  const url = new URL(`${BASE_URL}/comics/${comicId}/characters`);\r\n  const customParams = {\r\n    ...API_CREDENTIALS\r\n  };\r\n  url.search = new URLSearchParams(customParams).toString();\r\n\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  return normalizeCharacters(data);\r\n};\r\n\r\nfunction checkParams(params) {\r\n  const queryParams = {};\r\n\r\n  for (let key in params) {\r\n    if (params[key] !== null && params[key] !== undefined) {\r\n      queryParams[key] = params[key];\r\n    }\r\n  }\r\n\r\n  return queryParams;\r\n}\r\n\r\n","import { \r\n  createAsyncThunk, \r\n  createSlice, \r\n  createEntityAdapter \r\n} from '@reduxjs/toolkit';\r\n\r\nimport { getAllComics, getComicById } from '../../api/api';\r\n\r\nconst comicsAdapter = createEntityAdapter();\r\n\r\nconst initialState = comicsAdapter.getInitialState({\r\n  status: 'idle',\r\n  error: null,\r\n  activeComic: null,\r\n  creatorsByComic: [],\r\n  filters: {\r\n    limit: 20,\r\n    offset: 0,\r\n    total: 0,\r\n    currentPage: 0,\r\n    titleStartsWith: null\r\n  }\r\n});\r\n\r\nexport const fetchComics = createAsyncThunk(\r\n  'comics/fetchComics',\r\n  async (queryParams, { dispatch }) => {\r\n    const data = await getAllComics({ ...queryParams });\r\n    const { limit, offset, total, results } = data;\r\n\r\n    dispatch(filtersUpdated({ \r\n      offset, \r\n      limit, \r\n      total,\r\n      titleStartsWith: queryParams?.titleStartsWith || null\r\n    }));\r\n\r\n    return results;\r\n  }\r\n);\r\n\r\nexport const fetchComicById = createAsyncThunk(\r\n  'comics/fetchComicById',\r\n  async (comicId) => {\r\n    return await getComicById(comicId);\r\n  }\r\n);\r\n\r\nconst comicsSlice = createSlice({\r\n  name: 'comics',\r\n  initialState,\r\n  reducers: {\r\n    filtersUpdated(state, action) {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    }\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchComics.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchComics.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        comicsAdapter.removeAll(state);\r\n        comicsAdapter.upsertMany(state, action.payload);\r\n      })\r\n      .addCase(fetchComics.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = new Error('Error fetching data');\r\n      })\r\n      .addCase(fetchComicById.fulfilled, (state, action) => {\r\n        state.activeComic = action.payload;\r\n      });\r\n  }\r\n});\r\n\r\nexport default comicsSlice.reducer;\r\n\r\nexport const { filtersUpdated } = comicsSlice.actions;\r\n\r\nexport const {\r\n  selectAll: selectAllComics,\r\n  selectById: selectComicById,\r\n  selectIds: selectComicIds\r\n} = comicsAdapter.getSelectors(state => state.comics);\r\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter\r\n} from '@reduxjs/toolkit';\r\n\r\nimport { getCharactersByComic } from '../../api/api';\r\n\r\nconst comicCharactersAdapter = createEntityAdapter();\r\n\r\nconst initialState = comicCharactersAdapter.getInitialState({\r\n  status: 'idle',\r\n  error: null,\r\n  filters: {\r\n    limit: 20,\r\n    offset: 0,\r\n    total: 0\r\n  }\r\n});\r\n\r\nexport const fetchCharactersByComic = createAsyncThunk(\r\n  'comics/fetchCharactersByComic',\r\n  async (comicId, { dispatch }) => {\r\n    const data = await getCharactersByComic(comicId);\r\n    const { limit, offset, total, results } = data;\r\n\r\n    dispatch(filtersUpdated({\r\n      limit, offset, total\r\n    }));\r\n    \r\n    return results;\r\n  }\r\n);\r\n\r\nconst comicCharactersSlice = createSlice({\r\n  name: 'comicCharacters',\r\n  initialState,\r\n  reducers: {\r\n    filtersUpdated(state, action) {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    }\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchCharactersByComic.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCharactersByComic.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        comicCharactersAdapter.removeAll(state);\r\n        comicCharactersAdapter.upsertMany(state, action.payload);\r\n      })\r\n      .addCase(fetchCharactersByComic.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = new Error('Error fetching data');\r\n      })\r\n  }\r\n});\r\n\r\nexport default comicCharactersSlice.reducer;\r\n\r\nexport const { filtersUpdated } = comicCharactersSlice.actions;\r\n\r\nexport const {\r\n  selectAll: selectAllComicCharacters,\r\n  selectById: selectComicCharacterById,\r\n  selectIds: selectComicCharactersIds\r\n} = comicCharactersAdapter.getSelectors(state => state.comicCharacters);\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport { \r\n  fetchCharactersByComic,\r\n  selectComicCharacterById\r\n} from './comicCharactersSlice';\r\n\r\nconst ComicCharacterItem = ({ character }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [characterId] = character.resourceURI.split('/').reverse();\r\n  const characterDetails = useSelector(\r\n    state => selectComicCharacterById(state, characterId)\r\n  );\r\n\r\n  return (\r\n    <ListGroup.Item className=\"d-flex justify-content-between\">\r\n      <p>\r\n        <strong>{character.name}</strong>\r\n      </p>\r\n      <Button\r\n        variant=\"outline-primary\"\r\n        size=\"sm\"\r\n        onClick={() => setShow(true)}\r\n      >\r\n        Show more\r\n      </Button>\r\n\r\n      <Modal size=\"lg\" show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Character details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={characterDetails?.thumbnail} rounded thumbnail />\r\n            </Col>\r\n            <Col md={6}>\r\n              <h4>{characterDetails?.name}</h4>\r\n              <p>Comics: {characterDetails?.comics}</p>\r\n              <p>Events: {characterDetails?.events}</p>\r\n              <p>Series: {characterDetails?.series}</p>\r\n              <p>Stories: {characterDetails?.stories}</p>\r\n              <p>{characterDetails?.description}</p>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nconst ComicCharacters = () => {\r\n  const dispatch = useDispatch();\r\n  const { comicId } = useParams();\r\n  const { activeComic } = useSelector(state => state.comics);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCharactersByComic(comicId));\r\n  }, [dispatch, comicId]);\r\n\r\n  let itemsComicCharacters;\r\n  if (activeComic) {\r\n    const { characters } = activeComic;\r\n    // console.log('___', characters);\r\n    itemsComicCharacters = characters.items.map(character => (\r\n      <ComicCharacterItem \r\n        key={character.resourceURI.split('/').reverse()[0]}\r\n        character={character}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <ListGroup>\r\n      {itemsComicCharacters}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ComicCharacters;\r\n","import { \r\n  createSlice, \r\n  createAsyncThunk, \r\n  createEntityAdapter \r\n} from '@reduxjs/toolkit';\r\n\r\nimport { getCreatorsByComic } from '../../api/api';\r\n\r\nconst comicCreatorsAdapter = createEntityAdapter();\r\n\r\nconst initialState = comicCreatorsAdapter.getInitialState({\r\n  status: 'idle',\r\n  error: null,\r\n  filters: {\r\n    limit: 20,\r\n    offset: 0,\r\n    total: 0\r\n  }\r\n});\r\n\r\nexport const fetchCreatorsByComic = createAsyncThunk(\r\n  'comics/fetchCreatorsByComic',\r\n  async (comicId, { dispatch }) => {\r\n    const data = await getCreatorsByComic(comicId);\r\n    const { limit, offset, total, results } = data;\r\n    \r\n    dispatch(filtersUpdated({\r\n      limit, offset, total\r\n    }));\r\n\r\n    return results;\r\n  }\r\n);\r\n\r\nconst comicCreatorsSlice = createSlice({\r\n  name: 'comicCreators',\r\n  initialState,\r\n  reducers: {\r\n    filtersUpdated(state, action) {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    }\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchCreatorsByComic.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCreatorsByComic.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        comicCreatorsAdapter.removeAll(state);\r\n        comicCreatorsAdapter.upsertMany(state, action.payload);\r\n      })\r\n      .addCase(fetchCreatorsByComic.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = new Error('Error fetching data');\r\n      });\r\n  }\r\n});\r\n\r\nexport default comicCreatorsSlice.reducer;\r\n\r\nexport const { filtersUpdated } = comicCreatorsSlice.actions;\r\n\r\nexport const {\r\n  selectAll: selectAllComicCreators,\r\n  selectById: selectComicCreatorById,\r\n  selectIds: selectComicCreatorsIds\r\n} = comicCreatorsAdapter.getSelectors(state => state.comicCreators);\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport { \r\n  selectComicCreatorById,\r\n  fetchCreatorsByComic \r\n} from './comicCreatorsSlice';\r\n\r\nconst ComicCreatorItem = ({ creator }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [creatorId] = creator.resourceURI.split('/').reverse();\r\n  const creatorDetails = useSelector(\r\n    state => selectComicCreatorById(state, creatorId)\r\n  );\r\n\r\n  return (\r\n    <ListGroup.Item className=\"d-flex justify-content-between\">\r\n      <p>\r\n        <strong>{creator.name}</strong> {creator.role}\r\n      </p>\r\n      <Button \r\n        variant=\"outline-primary\" \r\n        size=\"sm\"\r\n        onClick={() => setShow(true)}\r\n      >\r\n        Show more\r\n      </Button>\r\n\r\n      <Modal size=\"lg\" show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Creator details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={creatorDetails?.thumbnail} rounded thumbnail />\r\n            </Col>\r\n            <Col md={6}>\r\n              <h4>{creatorDetails?.fullName}</h4>\r\n              <p>Comics: {creatorDetails?.comics}</p>\r\n              <p>Events: {creatorDetails?.events}</p>\r\n              <p>Series: {creatorDetails?.series}</p>\r\n              <p>Stories: {creatorDetails?.stories}</p>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nconst ComicCreators = () => {\r\n  const dispatch = useDispatch();\r\n  const { comicId } = useParams();\r\n  const { activeComic } = useSelector(state => state.comics);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCreatorsByComic(comicId));\r\n  }, [dispatch, comicId]);\r\n\r\n  let itemsComicCreators;\r\n  if (activeComic) {\r\n    const { creators } = activeComic;\r\n    itemsComicCreators = creators.items.map(creator => (\r\n      <ComicCreatorItem \r\n        key={creator.resourceURI.split('/').reverse()[0]} \r\n        creator={creator} \r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <ListGroup className=\"mt-4\">\r\n      {itemsComicCreators}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ComicCreators;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n  useParams, \r\n  useRouteMatch, \r\n  useHistory,\r\n  NavLink, \r\n  Switch, \r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { fetchComicById } from './comicsSlice';\r\nimport ComicCharacters from './ComicCharacters';\r\nimport ComicCreators from './ComicCreators';\r\n\r\nconst Comic = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { comicId } = useParams();\r\n  const { path, url } = useRouteMatch();\r\n  const comic = useSelector(state => state.comics.activeComic);\r\n  let comicInfo;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchComicById(comicId));\r\n  }, [dispatch, comicId]);\r\n\r\n  const handleBack = () => {\r\n    history.push('/comics');\r\n  };\r\n\r\n  if (comic) {\r\n    comicInfo = <>\r\n      <Card>\r\n        <Card.Img variant=\"top\" src={comic.thumbnail} />\r\n        <Card.Body>\r\n          <Card.Title>{comic.title}</Card.Title>\r\n          <Card.Text>\r\n            {comic.description}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>;\r\n  }\r\n\r\n  return (\r\n    <Container fluid=\"lg\" className=\"mt-4\">\r\n      <Row>\r\n        <Col md={3}>\r\n          {comicInfo}\r\n          <Button \r\n            variant=\"danger\" \r\n            className=\"mt-3 w-100\"\r\n            onClick={handleBack}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Col>\r\n\r\n        <Col md={9}>\r\n          <Nav variant=\"tabs\">\r\n            <Nav.Item>\r\n              <Nav.Link as={NavLink} to={`${url}/characters`}>\r\n                Characters <Badge pill bg=\"primary\">{comic?.characters.available}</Badge>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link as={NavLink} to={`${url}/creators`}>\r\n                Creators <Badge pill bg=\"primary\">{comic?.creators.available}</Badge>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link as={NavLink} to={`${url}/events`}>\r\n                Events <Badge pill bg=\"primary\">{comic?.events.available}</Badge>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link as={NavLink} to={`${url}/stories`}>\r\n                Stories <Badge pill bg=\"primary\">{comic?.stories.available}</Badge>\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n\r\n          <Switch>\r\n            <Route exact path={`${path}/characters`} component={ComicCharacters} />\r\n            <Route exact path={`${path}/creators`} component={ComicCreators} />\r\n            <Redirect to={`${url}/characters`} />\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Comic;\r\n","import SpinnerRB from 'react-bootstrap/Spinner';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerRB animation=\"border\" role=\"status\" className=\"mx-auto\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </SpinnerRB>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport { \r\n  fetchComics,\r\n  selectComicIds,\r\n  selectComicById,\r\n  filtersUpdated\r\n} from './comicsSlice';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst ComicItem = ({ comicId }) => {\r\n  const history = useHistory();\r\n  const comic = useSelector(state => selectComicById(state, comicId));\r\n\r\n  const handleComicSelected = () => {\r\n    history.push(`/comics/${comic.id}`);\r\n  };\r\n\r\n  return (\r\n    <Col onClick={handleComicSelected}>\r\n      <Card className=\"custom-card\">\r\n        <Card.Img variant=\"top\" src={comic.thumbnail} />\r\n        <Card.Body>\r\n          <Card.Title>{comic.title}</Card.Title>\r\n          <Card.Text>\r\n            {comic.description}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst ComicsSearchBar = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState('');\r\n\r\n  const handleSearchComics = (e) => {\r\n    e.preventDefault();\r\n    const titleStartsWith = value.length >= 1 ? value : null;\r\n\r\n    dispatch(fetchComics({ \r\n      limit: 20, \r\n      offset: 0,\r\n      titleStartsWith\r\n    }));\r\n    dispatch(filtersUpdated({ currentPage: 0 }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSearchComics} >\r\n        <Form.Group className=\"mb-5\">\r\n          <Form.Control \r\n            type=\"text\"\r\n            placeholder=\"Search comics\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n          />\r\n        </Form.Group>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ComicsControls = ({ comicStatus }) => {\r\n  const dispatch = useDispatch();\r\n  const { filters } = useSelector(state => state.comics);\r\n  const { limit, total, titleStartsWith, currentPage } = filters;\r\n  // const filters = useSelector(state => state.comics.filters);\r\n\r\n  const onPageChange = ({ selected }) => {\r\n    const offset = Math.ceil(selected * limit);\r\n    dispatch(fetchComics({ offset, titleStartsWith }));\r\n    dispatch(filtersUpdated({ currentPage: selected }));\r\n  };\r\n\r\n  // let content;\r\n  // if (comicStatus === 'succeeded') {\r\n  //   content = '';\r\n  // }\r\n\r\n  return (\r\n    <>  \r\n      <Row className=\"d-flex justify-content-between my-4\">\r\n        <ReactPaginate\r\n          pageCount={Math.ceil(total / limit)}\r\n          marginPagesDisplayed={3}\r\n          pageRangeDisplayed={5}\r\n          previousLabel={'previous'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          containerClassName={'pagination'}\r\n          activeClassName={'active'}\r\n          onPageChange={onPageChange}\r\n          forcePage={currentPage}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ComicsList = () => {\r\n  const dispatch = useDispatch();\r\n  const comicIds = useSelector(selectComicIds);\r\n\r\n  const comicStatus = useSelector(status => status.comics.status);\r\n  const error = useSelector(status => status.comics.error);\r\n\r\n  useEffect(() => {\r\n    if (comicStatus === 'idle') {\r\n      dispatch(fetchComics());\r\n    }\r\n  }, [comicStatus, dispatch]);\r\n\r\n  let content;\r\n\r\n  if (comicStatus === 'loading') {\r\n    content = <Spinner />;\r\n  } else if (comicStatus === 'succeeded') {\r\n    content = comicIds.map(comicId => (\r\n      <ComicItem key={comicId} comicId={comicId} />\r\n    ));\r\n  } else if (comicStatus === 'failed') {\r\n    content = <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <Container fluid=\"lg\">\r\n      <h1 className=\"my-4\">Comics</h1>\r\n      <ComicsSearchBar />\r\n      <Row xs={1} md={3} lg={4} className=\"g-4\">\r\n        {content}\r\n      </Row>\r\n      <ComicsControls comicStatus={comicStatus} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavbarRB from 'react-bootstrap/Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <NavbarRB bg=\"dark\" variant=\"dark\">\r\n      <Container fluid>\r\n      <NavbarRB.Brand as={NavLink} to=\"/comics\">\r\n        Marvel App\r\n      </NavbarRB.Brand>\r\n      <Nav className=\"me-auto\">\r\n        <Nav.Link as={NavLink} to=\"/comics\">\r\n          Comics\r\n        </Nav.Link>\r\n      </Nav>\r\n      </Container>\r\n    </NavbarRB>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Comic from '../features/comics/Comic';\r\nimport ComicsList from '../features/comics/ComicsList';\r\nimport Navbar from './Navbar';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/comics\" component={ComicsList}/>\r\n          <Route exac path=\"/comics/:comicId\" component={Comic}/>\r\n          <Redirect to=\"/comics\"/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport comicsReducer from '../features/comics/comicsSlice';\r\nimport comicCharactersReducer from '../features/comics/comicCharactersSlice';\r\nimport comicCreatorsReducer from '../features/comics/comicCreatorsSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    comics: comicsReducer,\r\n    comicCharacters: comicCharactersReducer,\r\n    comicCreators: comicCreatorsReducer\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux'\n\nimport AppRouter from './app/AppRouter';\nimport store from './app/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}